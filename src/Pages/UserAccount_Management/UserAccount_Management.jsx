import Header from "../../components/Header/Header";
import Filter_Admin from "../../components/Filter_Admin/Filter_Admin";
import MenuAdmin from "../../components/Menu_Admin/Menu_Admin";
import Footer from "../../components/Footer/Footer";
import CustomTable from "../../components/Custom/CustomTable";
import React from "react";
import "./UserAccount_Management.css";
function UserAccount_Management() {
  const [activeTab, setActiveTab] = React.useState("student");
  const [showDeleteOptions, setShowDeleteOptions] = React.useState(false);

  const students = [
    {
      studentId: "102200001",
      name: "Nguy·ªÖn VƒÉn A",
      class: "KTPM01",
      faculty: "C√¥ng ngh·ªá th√¥ng tin",
    },
    {
      studentId: "102200002",
      name: "Tr·∫ßn Th·ªã B",
      class: "QTKD02",
      faculty: "H√≥a",
    },
    {
      studentId: "102200003",
      name: "L√™ VƒÉn C",
      class: "KT01",
      faculty: "K·∫ø to√°n",
    },
    {
      studentId: "102200004",
      name: "Ph·∫°m Th·ªã D",
      class: "CK03",
      faculty: "C∆° kh√≠",
    },
    {
      studentId: "102200005",
      name: "Ho√†ng VƒÉn E",
      class: "XD02",
      faculty: "X√¢y d·ª±ng",
    },
    {
      studentId: "102200005",
      name: "Ho√†ng VƒÉn E",
      class: "XD02",
      faculty: "X√¢y d·ª±ng",
    },
    {
      studentId: "102200005",
      name: "Ho√†ng VƒÉn E",
      class: "XD02",
      faculty: "X√¢y d·ª±ng",
    },
    {
      studentId: "102200005",
      name: "Ho√†ng VƒÉn E",
      class: "XD02",
      faculty: "X√¢y d·ª±ng",
    },
    {
      studentId: "102200005",
      name: "Ho√†ng VƒÉn E",
      class: "XD02",
      faculty: "X√¢y d·ª±ng",
    },
  ];

  const teachers = [
    {
      teacherId: "GV001",
      name: "Nguy·ªÖn VƒÉn T",
      unit: "Khoa CNTT",
      position: "Tr∆∞·ªüng khoa",
    },
    {
      teacherId: "GV002",
      name: "Tr·∫ßn Th·ªã H",
      unit: "Khoa Kinh t·∫ø",
      position: "Gi·∫£ng vi√™n",
    },
    {
      teacherId: "GV003",
      name: "L√™ Minh K",
      unit: "Khoa C∆° kh√≠",
      position: "Ph√≥ tr∆∞·ªüng khoa",
    },
    {
      teacherId: "GV004",
      name: "Ph·∫°m Th·ªã L",
      unit: "Khoa K·∫ø to√°n",
      position: "Gi·∫£ng vi√™n",
    },
    {
      teacherId: "GV005",
      name: "Ho√†ng ƒê·ª©c M",
      unit: "Khoa X√¢y d·ª±ng",
      position: "Tr∆∞·ªüng b·ªô m√¥n",
    },
  ];

  return (
    <div className="user-account-management">
      <Header />
      <MenuAdmin />

      {/* Tabs */}
      <div className="management-tabs">
        <button
          className={activeTab === "student" ? "tab_active" : "tab"}
          onClick={() => setActiveTab("student")}
        >
          T√†i kho·∫£n sinh vi√™n
        </button>
        <button
          className={activeTab === "teacher" ? "tab_active" : "tab"}
          onClick={() => setActiveTab("teacher")}
        >
          T√†i kho·∫£n c√°n b·ªô, gi·∫£ng vi√™n
        </button>
      </div>
      <Filter_Admin activeTab={activeTab} />
      {/* N·ªôi dung t·ª´ng tab */}
      <div className="tabs-content">
        <div className="delete-section">
          <button
            className="delete-btn"
            onClick={() => setShowDeleteOptions((prev) => !prev)}
          >
            üóë X√≥a
          </button>
          <div className={`delete-dropdown ${showDeleteOptions ? "show" : ""}`}>
            <div className="delete-option">X√≥a t·∫•t c·∫£</div>
            <div className="delete-option">X√≥a c√°c t√†i kho·∫£n ƒë√£ ch·ªçn</div>
          </div>
        </div>

        {activeTab === "student" && (
          <div className="tab-title">Danh s√°ch sinh vi√™n</div>
        )}
        {activeTab === "teacher" && (
          <div className="tab-title">Danh s√°ch c√°n b·ªô, gi·∫£ng vi√™n</div>
        )}
        {activeTab === "student" && (
          <CustomTable
            columns={[
              "M√£ sinh vi√™n",
              "H·ªç t√™n",
              "L·ªõp",
              "Khoa",
              "Ch·ªçn",
              "Thao t√°c",
            ]}
            data={students.map((item) => ({
              m√£_sinh_vi√™n: item.studentId,
              h·ªç_t√™n: item.name,
              l·ªõp: item.class,
              khoa: item.faculty,
              ch·ªçn: <input type="checkbox" key={item.studentId} />,
              thao_t√°c: (
                <button className="px-2 py-1 border rounded">
                  Xem chi ti·∫øt
                </button>
              ),
            }))}
          />
        )}

        {activeTab === "teacher" && (
          <CustomTable
            columns={[
              "M√£ gi·∫£ng vi√™n",
              "H·ªç t√™n",
              "ƒê∆°n v·ªã",
              "Ch·ª©c v·ª•",
              "Ch·ªçn",
              "Thao t√°c",
            ]}
            data={teachers.map((item) => ({
              m√£_gi·∫£ng_vi√™n: item.teacherId,
              h·ªç_t√™n: item.name,
              ƒë∆°n_v·ªã: item.unit,
              ch·ª©c_v·ª•: item.position,
              ch·ªçn: <input type="checkbox" key={item.teacherId} />,
              thao_t√°c: (
                <button className="px-2 py-1 border rounded">
                  Xem chi ti·∫øt
                </button>
              ),
            }))}
          />
        )}
      </div>

      <Footer />
    </div>
  );
}

export default UserAccount_Management;
